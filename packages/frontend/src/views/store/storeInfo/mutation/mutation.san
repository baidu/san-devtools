<template>
    <div class="ex-panel-panel mutation-wrap">
        <div class="ex-panel-wrapper" s-if="infoList.length>0">
            <san-collapse defaultActiveKey="{{['1']}}">
                <san-collapse-panel header="Basic Information" key='1'>
                    <div s-for="info in infoList">
                        <san-row align="middle">
                            <san-col span="12">{{info.key}}</san-col>
                            <san-col span="12" s-if="info.isArray">
                                <span
                                    class="arr-item"
                                    s-for="item in info.value"
                                >
                                    {{item}}
                                </span>
                            </san-col>
                            <san-col span="12" s-else>
                                {{info.value === 'undefined' ? '-' : info.value}}
                            </san-col>
                        </san-row>
                    </div>
                    <div class="payload-wrapper">
                        <div class="payload">
                            <div class="payload-header">
                                payload
                                <div class="payload-header-actions">
                                    <san-tooltip
                                        title="dispatch action"
                                    >
                                        <san-icon class="payload-header-actions-item" type="dispatch" on-click="dispatchHandler" options="{{{fill: '#1968fa'}}}"></san-icon>
                                    </san-tooltip>
                                    <san-tooltip
                                        title="time travel"
                                    >
                                        <san-icon class="payload-header-actions-item" type="travel" on-click="timeTravel" options="{{{fill: '#1968fa'}}}"></san-icon>
                                    </san-tooltip>
                                </div>
                            </div>
                            <san-json-tree-view
                                s-ref="payload"
                                alwaysShowRoot="{{!0}}"
                                data="{{selectedMutationInfo.payload}}"
                                filterText="{{filterText}}"
                                rootName="payload"
                                readonly="{{readonly}}"
                            >
                            </san-json-tree-view>
                        </div>
                    </div>
                </san-collapse-panel>
            </san-collapse>
        </div>
        <div class="ex-panel-wrapper">
            <san-collapse defaultActiveKey="{{['1']}}">
                <san-collapse-panel header="Diff" key='1' s-if="diffData.length>0">
                    <template slot="extra">
                        <san-tooltip
                            title="当 oldData 以及 newData 出现 '~payload' 字符串的时候，表示是引用了 payload 中的数据"
                        >
                            <san-icon class="diff-tip" type="tip"></san-icon>
                        </san-tooltip>
                    </template>
                    <div class="diff" s-for="diff, index in diffData">
                        <san-divider s-if="index > 0" />
                        <san-sub-header
                            backIcon="{{false}}"
                            title="Type: {{diff.$change}}"
                            subTitle=""
                        >
                        </san-sub-header>
                        <san-row class="switch-wrapper">
                            <san-col
                                span="6"
                                class="old {{diffState[index] ? '' : 'current'}}"
                            >
                                Old value
                            </san-col>
                            <san-col span="12" class="switch">
                                <san-switch
                                    checked="{=diffState[index]=}"
                                ></san-switch>
                            </san-col>
                            <san-col
                                span="6"
                                class="new {{diffState[index] ? 'current' : ''}}"
                            >
                                New value
                            </san-col>
                        </san-row>
                        <san-row class="path">
                                <span>Target: </span>
                                <span class="target">
                                    {{diff.target | formateTarget}}
                                </span>
                        </san-row>
                        <san-row class="json">
                            <san-col span="24">
                                <san-json-tree-view
                                    alwaysShowRoot="{{!0}}"
                                    data="{{diffState[index] ? diff.newValue : diff.oldValue}}"
                                    filterText="{{filterText}}"
                                    rootName="data"
                                    readonly="{{true}}"
                                >
                                </san-json-tree-view>
                            </san-col>
                        </san-row>
                    </div>
                </san-collapse-panel>
                <san-collapse-panel header="Diff" key='1' s-else>
                    <div>this mutation is unnecessary, make some optimization</div>
                </san-collapse-panel>
            </san-collapse>
        </div>
        <div class="ex-panel-wrapper">
            <san-collapse defaultActiveKey="{{['1']}}">
                <san-collapse-panel header="Call Stack" key='1'>
                    <template s-for="item, index in actionCallStack">
                        <div class="call-stack-info">
                            <span>{{item.name}}</span>
                            <san-popover
                                s-if="{{index !== actionCallStack.length - 1}}"
                                placement="left"
                                overlayClassName="san-devtools-store-popup-content"
                            >
                                <div
                                    style="font-size: 20px;cursor: pointer;display: flex;"
                                    slot="content"
                                >
                                    <san-tooltip title="dispatch action" class="san-devtools-store-popup-content-tooltip">
                                        <san-icon
                                            class="call-stack-info-action"
                                            type="dispatch"
                                            on-click="dispatchHandler(item.storeName, item.name, index)"
                                            options="{{{fill: '#1968fa'}}}"
                                        ></san-icon>
                                    </san-tooltip>
                                </div>
                                <san-icon class="call-stack-info-menu" type="more" options="{{{fill: '#1968fa'}}}"></san-icon>
                            </san-popover>
                        </div>
                        <san-json-tree-view
                            class="call-stack-data"
                            s-if="{{index !== actionCallStack.length - 1}}"
                            s-ref="payload{{index}}"
                            alwaysShowRoot="{{!0}}"
                            data="{{item.payload}}"
                            filterText="{{filterText}}"
                            rootName="payload"
                            readonly="{{readonly}}"
                        >
                        </san-json-tree-view>
                    </template>
                </san-collapse-panel>
            </san-collapse>
        </div>
        <div class="store-name" s-if="infoList.length>0 || diffData.length>0">{{ storeName }}</div>
    </div>
</template>

<script>
    import san, { DataTypes } from 'san';
    import {STORE_DISPATCH, STORE_TIME_TRAVEL} from '@shared/protocol';
    import { connectStore, store } from '@frontend/store/index';
    import JSONView from 'json-tree-view';
    import 'json-tree-view/devtools.css';

    import pageheader from 'santd/es/pageheader';
    import { Switch, Grid, Divider, Button, Collapse, Tooltip, Popover } from 'santd';

    import JsonTreeView from '@frontend/components/misc/jsonTreeView.san';
    import Icon from '@frontend/components/icon/icon.san';

    export default connectStore({
        selectedMutationInfo: 'selectedMutationInfo',
        storeName: 'selectedMutationInfo.storeName',
        diffData: 'selectedMutationInfo.diff',
        actionCallStack: 'actionCallStack',
        bridge: 'bridge',
        readonly: 'settings.storeReadOnly'
    })(
        {
            dataTypes: {
                /* props */
                selectedMutationInfo: DataTypes.object,
                storeName: DataTypes.string,
                diffData: DataTypes.array,
                bridge: DataTypes.object,
                readonly: DataTypes.bool,
                filterText: DataTypes.string,
                /* state */
                diffState: DataTypes.arrayOf(DataTypes.bool)
            },

            filters: {
                formateTarget(value) {
                    return value.join('.');
                }
            },

            computed: {
                infoList() {
                    let filterText = this.data.get('filterText');
                    let selectedMutationInfo = this.data.get('selectedMutationInfo') || [];
                    let infoList = Object.entries(selectedMutationInfo).map(([key, value]) => {
                        if (key !== 'diff' && key !== 'payload' && JSON.stringify([key, value]).indexOf(filterText) > -1) {
                            return {
                                key,
                                value
                            }
                        }
                    });
                    return infoList;
                }
            },

            dispatchHandler(storeName, actionName, index) {
                if (storeName instanceof MouseEvent) {
                    storeName = this.data.get('storeName');
                    actionName = this.data.get('selectedMutationInfo.actionName');
                    index = '';
                }
                let payload = this.ref(`payload${index}`).viewer().value;
                let bridge = this.data.get('bridge');
                let message = {
                    storeName,
                    actionName,
                    payload
                }
                bridge.send(STORE_DISPATCH, message);
            },
            components: {
                'san-divider': Divider,
                'san-sub-header': pageheader,
                'san-switch': Switch,
                'san-divider': Divider,
                'san-icon': Icon,
                'san-row': Grid.Row,
                'san-col': Grid.Col,
                'san-button': Button,
                'san-json-tree-view': JsonTreeView,
                'san-collapse': Collapse,
                'san-collapse-panel': Collapse.Panel,
                'san-tooltip': Tooltip,
                'san-popover': Popover
            },

            initData() {
                return {
                    diffState: [true]
                };
            },

            timeTravel() {
                let storeName = this.data.get('storeName');
                let selectedMutationInfo = this.data.get('selectedMutationInfo');
                console.log('selectedMutationInfo', storeName, selectedMutationInfo.actionId);
                this.data.get('bridge').send(STORE_TIME_TRAVEL, {
                    id: selectedMutationInfo.actionId,
                    storeName
                });
            }
        }
    )

</script>

<style lang="less">
    @import '@frontend/views/style/variables.less';
    .san-devtools-store-popup-content {
        &-tooltip > span {
            display: flex;
        }
    }
    .mutation-wrap {
        .payload-wrapper {
            .payload {
                margin: 3px 0;
                .payload-header {
                    user-select: none;
                    &-actions {
                        font-size: 26px;
                        &-item {
                            cursor: pointer;
                            &:hover {
                                background: #eeeeee;
                                border-radius: 50%;
                            }
                        }
                    }
                    .santd-btn {
                        margin: 4px 0;
                        height: 28px;
                        border-radius: 24px;
                    }
                    .santd-btn-primary {
                        background-color: @button-color;
                        border: 0;
                    }
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    color: @button-color;
                    font-size: 120%;
                    margin-bottom: 5px;
                }
            }
        }
        .call-stack-info {
            display: flex;
            justify-content: space-between;
            align-items: center;
            &-action, &-menu {
                cursor: pointer;
            }
            &-content {
                height: 30px;
                width: 30px;
                font-size: 30px;
            }
        }
        .call-stack-data {
            overflow: auto;
        }
        .switch-wrapper {
            margin: 15px 0;
            .new {
                text-align: end;
            }
            .switch {
                > span {
                    width: 100%;
                    height: 6px;
                }
            }
            .santd-switch-checked:after {
                top: 50%;
                left: 100%;
                transform: translate(-100%, -50%);
            }
            .santd-switch-checked {
                background-color: @color-blue-l10 !important;
            }
        }
        .santd-switch .santd-switch-handler,
        .santd-switch:after {
            top: 50% !important;
            transform: translateY(-50%);
            width: 16px;
            height: 16px;
        }
        .path {
            margin-bottom: 10px;
            .target {
                padding: 2px 10px;
                border-radius: 12px;
                color: #fff;
                font-size: 12px;
                background-color: @target-color;
            }
        }
        .store-name {
            color: @color-sd-grey;
            width: 100%;
            text-align: center;
            font-size: 14px;
            margin: 20px 0;
        }
        .santd-collapse-extra > span {
            display: flex;
            justify-content: center;
            align-items: center;
            & > span {
                font-size: 24px;
                line-height: 10px;
            }
        }
    }
    .san-devtools-dark {
        .mutation-wrap {
            .payload-wrapper {
                .payload {
                    .payload-header {
                        color: @color-white;
                    }
                }
            }
        }
    }
</style>
