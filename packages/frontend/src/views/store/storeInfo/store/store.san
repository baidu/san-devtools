<template>
    <div class="ex-panel-panel">
        <div class="ex-panel-wrapper" s-if="!!raw">
            <san-collapse defaultActiveKey="{{['1']}}">
                <san-collapse-panel header="Store state" key='1'>
                    <san-json-tree-view
                        selectedComponentId="{{selectedComponentId}}"
                        alwaysShowRoot="{{!0}}"
                        data="{=raw=}"
                        rootName="raw"
                        readonly="{{true}}"
                        filterText="{{filterText}}"
                    >
                    </san-json-tree-view>
                </san-collapse-panel>
            </san-collapse>
        </div>
        <div class="ex-panel-wrapper" s-if="!!componentIds && !!componentIds.length">
            <san-collapse defaultActiveKey="{{['1']}}">
                <san-collapse-panel header="components" key='1'>
                    <div class="component-wrapper">
                        <div
                            class="components"
                            s-for="item, index in componentIds"
                            on-mouseover="highlightNativeNode(item)"
                            on-mouseout="unhighlightNativeNode"
                        >
                            <span class="component-id">{{ item }}</span>
                        </div>
                    </div>
                </san-collapse-panel>
            </san-collapse>
        </div>
        <div class="ex-panel-wrapper" s-if="!!actions && !!actions.length">
            <san-collapse>
                <san-collapse-panel header="actions" key='1'>
                    <div class="actions-wrapper">
                        <div class="actions" s-for="item, index in filteredActions">
                            <div class="func-name">{{item.name}}</div>
                            <san-pretty-code fnStr="{{item.fn}}"></san-pretty-code>
                        </div>
                    </div>
                </san-collapse-panel>
            </san-collapse>
        </div>
    </div>
</template>

<script>
    import san, { DataTypes } from 'san';
    import {INSPECT_HIGHLIGHT, INSPECT_UNHIGHLIGHT} from '@shared/protocol';
    import { connectStore, store } from '@frontend/store/index';
    import JSONView from 'json-tree-view';
    import 'json-tree-view/devtools.css';

    import { Collapse, Button, Message } from 'santd';

    import JsonTreeView from '@frontend/components/misc/jsonTreeView.san';
    import PrettyCode from '@frontend/components/prettyCode/prettyCode.san';

    export default connectStore({
        raw: 'storeData.raw',
        actions: 'storeData.actions',
        components: 'storeData.components',
        storeName: 'selectedMutationInfo.storeName',
        bridge: 'bridge'
    })(
        {
            dataTypes: {
                raw: DataTypes.object,
                actions: DataTypes.array,
                components: DataTypes.object,
                storeName: DataTypes.string,
                bridge: DataTypes.object,
                filterText: DataTypes.string
            },

            highlightNativeNode(componentId) {
                this.data.get('bridge') && this.data.get('bridge').send(INSPECT_HIGHLIGHT, componentId);
            },

            unhighlightNativeNode() {
                this.data.get('bridge') && this.data.get('bridge').send(INSPECT_UNHIGHLIGHT, '');
            },

            computed: {
                componentIds() {
                    let components = this.data.get('components');
                    return components ? Object.keys(components) : [];
                },
                filteredActions() {
                    let actions = this.data.get('actions') || [];
                    let filterText = this.data.get('filterText');
                    let filteredActions = actions.filter(item => JSON.stringify(item).indexOf(filterText) > -1);
                    return filteredActions;
                }
            },

            components: {
                'san-json-tree-view': JsonTreeView,
                'san-collapse': Collapse,
                'san-collapse-panel': Collapse.Panel,
                'san-pretty-code': PrettyCode,
                'san-button': Button
            }
        }
    )

</script>

<style lang="less">
    @import '@frontend/views/style/variables.less';
    .store-button {
        display: flex;
        justify-content: center;
        align-items: center;
        .santd-btn {
            margin: 4px 0;
            height: 28px;
            border-radius: 24px;
        }
        .santd-btn-primary {
            background-color: @button-color;
            border: 0;
        }
    }
    .actions-wrapper {
        .actions {
            margin: 3px 0;
            .func-name {
                color: @func-font-color;
                font-size: 120%;
                margin-bottom: 5px;
            }
        }
    }
    .component-wrapper {
        .components {
            display: inline-block;
            white-space: nowrap;
            margin-right: 20px;
            margin-bottom: 8px;
            span {
                font-size: 14px;
                height: 20px;
                box-sizing: border-box;
                padding: 3px 8px;
                border-radius: 12px;
                border: 1px solid @tag-color;
                cursor: pointer;
                &.component-id {
                    color: @tag-color;
                }
            }
        }
    }
    .hidden {
        display: none;
    }

    .san-devtools-dark {
        .actions-wrapper {
            .actions {
                .func-name {
                    color: @dark-func-font-color;
                }
            }
        }
    }
</style>
